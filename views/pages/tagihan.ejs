<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/head'); %>
    <style>
        .menu-button {
        position: absolute;
        top: 20px;
        right: 20px;
        padding: 10px 20px;
        background-color: #258062;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        transition: 0.3s ease;
      }
    </style>
</head>
    
<body>
    <div class="container mt-5">
        <h3>Pencatatan Tagihan</h3>

        <a href="/menu" class="menu-button"> MENU </a>

        <!-- Form Input Tagihan-->
        <div class="card mb-4">
            <div class="card-header">
                Tambah Tagihan Bulan Ini
            </div>
            <div class="card-body">
                <form id="tagihan-form">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="nama" class="form-label">Nama Tagihan</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="col-md-3">
                            <label for="jumlah" class="form-label">Jumlah Tagihan</label>
                            <input type="number" class="form-control" id="amount" name="amount" required>
                        </div>
                        <div class="col-md-3">
                            <label for="tanggal" class="form-label">Tanggal Jatuh Tempo</label>
                            <input type="date" class="form-control" id="date" name="date" required>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">
                        Simpan
                    </button>
                </form>
            </div>
        </div>
    
   <!-- Filter Data -->
   <div class="card mb-4">
    <div class="card-header">
        Filter Data
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <label for="filter-tanggal" class="form-label">Tanggal Awal - Tanggal Akhir</label>
                <form id="filter-form" action="/filter" method="GET" class="d-flex mb-4">
                    <input type="date" id="filter-startDate" class="form-control me-2" required>
                    <input type="date" id="filter-endDate" class="form-control" required>
                </form>
            </div>
           
        </div>
                <button type="submit" class="btn btn-primary" onclick="filterInvoice()">Cari</button>
                <button type="button" class="btn btn-secondary ms-2" onclick="resetInvoice()">Reset</button>
            </div>
        </div>
     <!-- Tabel Daftar Tagihan -->
    <div class="card">
        <div class="card-header">
            Daftar Tagihan
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Nama Tagihan</th>
                            <th>Jumlah Tagihan</th>
                            <th>Tanggal</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% invoices.forEach(invoice=> { %>
                        <tr>
                            <td>
                                <%= invoice.name %>
                            </td>
                            <td>
                                <%= invoice.amount %>
                            </td>
                            <td>
                                <%= invoice.date.toLocaleDateString() %>
                            </td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="editInvoice('<%= invoice._id %>')">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteInvoice('<%= invoice._id %>')">Hapus</button>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

 <!-- Modal Edit -->
 <div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Tagihan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="edit-form">
                    <input type="hidden" id="edit-id">
                    <div class="mb-3">
                        <label class="form-label">Nama</label>
                        <input type="text" class="form-control" id="edit-name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Jumlah</label>
                        <input type="number" class="form-control" id="edit-amount" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tanggal</label>
                        <input type="date" class="form-control" id="edit-date" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                <button type="button" class="btn btn-primary" onclick="updateInvoice()">Simpan</button>
            </div>
        </div>
    </div>
</div>


<footer>
    <%- include('../partials/footer.ejs'); %>
</footer>
<!-- JavaScript untuk Edit dan Delete -->
<script>
    let currentId = '';

    document.getElementById('tagihan-form').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevents form from submitting the normal way

        const data = {
            name: document.getElementById('name').value,
            amount: document.getElementById('amount').value,
            date: document.getElementById('date').value,
        };

        fetch('/api/invoice', {  // Using the existing backend API
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        })
        .then(response => response.json())
        .then(() => {
            window.location.href = '/tagihan';  // Redirect to tagihan page after successful submission
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });

    function editInvoice(id) {
        currentId = id;
        fetch(`/api/invoice/${id}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('edit-id').value = data.invoice._id;
                document.getElementById('edit-name').value = data.invoice.name;
                document.getElementById('edit-amount').value = data.invoice.amount;
                document.getElementById('edit-date').value = data.invoice.date.split('T')[0];
                new bootstrap.Modal(document.getElementById('editModal')).show();
            });
    }

    function updateInvoice() {
        const data = {
            name: document.getElementById('edit-name').value,
            amount: document.getElementById('edit-amount').value,
            date: document.getElementById('edit-date').value,
        };

        fetch(`/api/invoice/${currentId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(() => {
                window.location.reload();
            });
    }

    function deleteInvoice(id) {
        if (confirm('Apakah Anda yakin ingin menghapus data ini?')) {
            fetch(`/api/invoice/${id}`, {
                method: 'DELETE'
            })
                .then(() => {
                    window.location.reload();
                });
        }
    }
    function filterInvoice() {
        const start = new Date(document.getElementById('filter-startDate').value); 
        const end = new Date(document.getElementById('filter-endDate').value);

        document.querySelectorAll('tbody tr').forEach(row => {
            const dateText = row.children[2].textContent.trim();
            const [day, month, year] = dateText.split('/');
            const rowDate = new Date(`${year}-${month}-${day}`);

            if (rowDate >= start && rowDate <= end) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function resetInvoice() {
        document.getElementById('filter-startDate').value = '';
        document.getElementById('filter-endDate').value = '';

        const rows = document.querySelectorAll('table tbody tr');
        rows.forEach(row => row.style.display = '');
    }

</script>
</body>

</html>